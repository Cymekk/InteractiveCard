"use strict";var blankInputs,confirmBtn=document.querySelector(".confirm-btn"),continueBtn=document.querySelector(".continue-btn"),flexbox=document.querySelector(".flexbox"),confirmationBox=document.querySelector(".confirmation-box"),allInputs=document.querySelectorAll(".input"),allParagraphs=document.querySelectorAll(".paragraph"),cardOwner=document.querySelector(".name"),cardNumber=document.querySelector(".number"),expMonth=document.querySelector(".month"),expYear=document.querySelector(".year"),cvcNmber=document.querySelector(".cvc-input"),cvcCard=document.querySelector(".back-cvc-number"),frontNumber=document.querySelector(".front-card-number"),frontOwner=document.querySelector(".front-name"),expDate=document.querySelector(".front-exp-date"),reg=/[0-9]/,ValidateForm=(confirmBtn.addEventListener("click",function(){blankInputs=0,ValidateForm(),0==blankInputs&&(flexbox.style.display="none",confirmationBox.style.display="flex",AssignCardDetails())}),continueBtn.addEventListener("click",function(){ClearInputAndAlerts(),flexbox.style.display="flex",confirmationBox.style.display="none"}),function(){""==allInputs[0].value?(allParagraphs[0].textContent="Cardholder name can't be empty",allInputs[0].classList.add("error"),blankInputs++):(allParagraphs[0].textContent="",allInputs[0].classList.remove("error")),""!=allInputs[1].value&&reg.test(allInputs[1].value)&&16==allInputs[1].value.length?(allParagraphs[1].textContent="",allInputs[1].classList.remove("error")):(allParagraphs[1].textContent="Cardnumber can't be blank, number must contains only number and should have 16 characters",allInputs[1].classList.add("error"),blankInputs++),""==allInputs[2].value||2<allInputs[2].value.length||parseInt(allInputs[2].value)<1||12<parseInt(allInputs[2].value)||!reg.test(allInputs[2].value)?(allParagraphs[2].textContent="Month details cannot be blank, also input should cointains maximum 2 numbers from 1-12 range",allInputs[2].classList.add("error"),blankInputs++):(allParagraphs[2].textContent="",allInputs[2].classList.remove("error")),""==allInputs[3].value||2<allInputs[3].value.length||parseInt(allInputs[3].value)<1||!reg.test(allInputs[3].value)?(allParagraphs[3].textContent="Year details cannot be blank, also input should cointains maximum 2 numbers from 1-99 range",allInputs[3].classList.add("error"),blankInputs++):(allParagraphs[3].textContent="",allInputs[3].classList.remove("error")),""==allInputs[4].value||3<allInputs[4].value.length||parseInt(allInputs[4].value)<1||!reg.test(allInputs[4].value)?(allParagraphs[4].textContent="CVC number can't be blank, CVC should contains 3 numbers and need to be greather than 0",allInputs[4].classList.add("error"),blankInputs++):(allParagraphs[4].textContent="",allInputs[4].classList.remove("error"))}),ClearInputAndAlerts=function(){allInputs.forEach(function(e){e.value=""}),allParagraphs.forEach(function(e){e.textContent=""}),cvcCard.textContent="",frontNumber.textContent="",frontOwner.textContent="",expDate.textContent=""},AssignCardDetails=function(){cvcCard.textContent=cvcNmber.value,frontNumber.textContent="".concat(cardNumber.value.slice(0,4)," ").concat(cardNumber.value.slice(4,8)," ").concat(cardNumber.value.slice(8,12)," ").concat(cardNumber.value.slice(12,16)),frontOwner.textContent=cardOwner.value,expDate.textContent="".concat(expMonth.value,"/").concat(expYear.value)};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
